// Content below is autogenerated by ojster template engine
// usually there is no reason to edit it manually
goog.provide('gcinui.templates.FormFields');

goog.require('ojster');
goog.require('goog.array');

/**
 * @param {Object=} opt_data
 * @param {Object=} opt_ctx
 * @param {Object=} opt_writer
 * @constructor
 * @extends {ojster.Template}
 */
gcinui.templates.FormFields = function(opt_data, opt_ctx, opt_writer) {
	goog.base(this, opt_data, opt_ctx, opt_writer);
};
goog.inherits(gcinui.templates.FormFields, ojster.Template);

gcinui.templates.FormFields.prototype.renderBlockMain = function() { // @7:1
	var self = this;
	var d = this.data, vars = this.vars;

	goog.array.forEach(d.replacements, function(param) {

	self.writer.write(
		'<div class="',
		goog.getCssName(/** @type {string} */ (self.baseCssName), 'param'), // @9:15
		'"><label><span class="',
		goog.getCssName(/** @type {string} */ (self.baseCssName), 'label'), // @11:20
		'">$',
		self.escape(param), // @11:40
		'</span><input class="',
		goog.getCssName(/** @type {string} */ (self.baseCssName), 'input-text'), // @12:23
		'" name="$',
		param, // @12:54
		'" type="text" value="',
		d.values['$' + param] || '$$$' + param + '$$$', // @12:85
		'"></label></div>'
	); // @15:1

	});


	goog.array.forEach(d.params, function(param) {

	self.writer.write(
		'<div class="',
		goog.getCssName(/** @type {string} */ (self.baseCssName), 'param'), // @17:15
		'"><label><span class="',
		goog.getCssName(/** @type {string} */ (self.baseCssName), 'label'), // @19:20
		'">',
		self.escape(param.value), // @19:39
		'</span>'
	); // @20:7

	if (param.type == 'simple') {

	self.writer.write(
		'<input class="',
		goog.getCssName(/** @type {string} */ (self.baseCssName), 'input-text'), // @21:23
		'" name="',
		param.value, // @21:53
		'" type="text" value="',
		d.values[param.value] || '{' + param.value + '}', // @21:90
		'">'
	); // @22:7

	} else if (param.type == 'plural') {

	self.writer.write(
		'<input class="',
		goog.getCssName(/** @type {string} */ (self.baseCssName), 'input-number'), // @23:23
		'" min="0" name="',
		param.value, // @23:63
		'" type="number" value="',
		d.values[param.value] || '0', // @23:102
		'">'
	); // @24:7

	} else if (param.type == 'select') {

	self.writer.write(
		'<select class="',
		goog.getCssName(/** @type {string} */ (self.baseCssName), 'secect'), // @25:24
		'" name="',
		param.value, // @25:50
		'">'
	); // @26:11

	goog.array.forEach(param.variants, function(variant) {

	self.writer.write(
		'<option',
		d.values[param.value] == variant ? ' selected' : '', // @27:20
		'>',
		self.escape(variant), // @27:77
		'</option>'
	); // @28:11

	});

	self.writer.write(
		'</select>'
	); // @30:7

	}

	self.writer.write(
		'</label></div>'
	); // @33:1

	});

}; // @34:1
